{
  "extends": "eslint:recommended",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "impliedStrict": true,
      "arrowFunctions": true
    }
  },
  "env": {
    "node": true,
    "es6": true
  },
  "globals": {
    "tabris": false,
    "$": false
  },
  "rules": {
    "no-empty": "off",
    "no-console": "off",
    "no-control-regex": "off",
    "semi": "error",
    "eqeqeq": ["error", "allow-null"],
    "indent": ["error", 2, {"SwitchCase": 1}],
    "linebreak-style": ["error", "unix"],
    "no-trailing-spaces": "error",
    "space-in-parens": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "object-curly-spacing": ["error", "never"],
    "space-before-blocks": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "max-len": ["error", 120, 2, {"ignoreUrls": true, "ignorePattern": "\\/\\^"}],
    "quotes": ["error", "single", "avoid-escape"],
    "curly": ["error", "all"],
    "eol-last": "error",
    "no-with": "error",
    "no-var": "error",
    "prefer-arrow-callback": "error",
    "arrow-body-style": ["error", "as-needed"],
    "object-shorthand": ["error", "always"],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "prefer-const": "error",
    "comma-dangle": "error",
    "dot-notation": "error",
    "getter-return": "error",
    "id-match": "error",
    "new-parens": "error",
    "no-caller": "error",
    "no-cond-assign": "off",
    "no-eval": "error",
    "no-fallthrough": "error",
    "no-invalid-this": "error",
    "no-new-wrappers": "error",
    "no-shadow": [
      "error",
      {
        "hoist": "all",
        "builtinGlobals": false
      }
    ],
    "no-throw-literal": "error",
    "no-unused-expressions": "error",
    "one-var-declaration-per-line": [
      "error",
      "initializations"
    ],
    "radix": "off",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "spaced-comment": "error",
    "valid-typeof": "off",
    "yoda": "off",
    "jsx-quotes": [
      "error",
      "prefer-single"
    ]
  },
  "overrides": [
    {
      "files": [
        "*.test.*"
      ],
      "env": {
        "node": true,
        "mocha": true
      },
      "globals": {
        "tabris": false,
        "$": false,
        "after": false,
        "afterEach": false,
        "before": false,
        "beforeEach": false,
        "context": false,
        "describe": false,
        "it": false,
        "mocha": false,
        "run": false,
        "setup": false,
        "specify": false,
        "suite": false,
        "suiteSetup": false,
        "suiteTeardown": false,
        "teardown": false,
        "test": false,
        "xcontext": false,
        "xdescribe": false,
        "xit": false,
        "xspecify": false
      },
      "rules": {
        "no-unused-expressions": "off",
        "no-invalid-this": "off",
        "prefer-arrow-callback": "off"
      }
    },
    {
      "files": [
        "./app/templates-3.x/**/*.ts",
        "./app/templates-3.x/**/*.jsx",
        "./app/templates-3.x/**/*.tsx"
      ],
      "env": {
        "node": true,
        "mocha": true
      },
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint/eslint-plugin",
        "react"
      ],
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module",
        "project": "./tsconfig.json"
      },
      "rules": {
        "eol-last": "warn",
        "eqeqeq": [
          "warn",
          "allow-null"
        ],
        "linebreak-style": [
          "warn",
          "unix"
        ],
        "no-trailing-spaces": "warn",
        "no-console": "off",
        "no-var": "warn",
        "no-invalid-this": "off",
        "prefer-const": "warn",
        "no-use-before-define": "off",
        "prefer-arrow-callback": [
          "warn",
          {
            "allowNamedFunctions": true,
            "allowUnboundThis": false
          }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
          }
        ],
        "react/jsx-uses-vars": "error", // mark imports used as JSX elements as used
        "indent": "off",
        "react/jsx-indent-props": "error", // works better than built-in "indent" rule
        "react/jsx-boolean-value": "error",
        "react/jsx-curly-brace-presence": "error",
        "react/jsx-curly-newline": "error",
        "react/jsx-curly-spacing": "error",
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-wrap-multilines": [
          "error",
          {
            "declaration": "parens-new-line",
            "assignment": "parens-new-line",
            "return": "parens-new-line",
            "arrow": "ignore",
            "condition": "ignore",
            "logical": "ignore",
            "prop": "ignore"
          }
        ]
      },
      "overrides": [
        {
          "files": [
            "*.jsx"
          ],
          "rules": {
            "@typescript-eslint/explicit-member-accessibility": [
              "error",
              {
                "accessibility": "no-public"
              }
            ]
          }
        }
      ]
    }
  ]
}
